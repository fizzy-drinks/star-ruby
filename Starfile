#!/usr/bin/env ruby

require "securerandom"
require "./lib/database_adapter/sqlite"

app unhype

db Star::DatabaseAdapter::Sqlite

model(tasklists) {
  id { string { SecureRandom.uuid } }
  name { required string }
}

model(tasks) {
  id { string { SecureRandom.uuid } }
  title { required string }
  tasklist_id { required string }
  created_at { date { DateTime.now } }
  date_due { date { DateTime.now } }
  closed_at { date }
}

router {
  get("/tasklists") {
    use {
      query {
        name Object
      }
    }

    app.models.tasklists.where(name:).to_json
  }

  post("/tasklists") {
    use {
      body {
        name String
      }
    }

    id = SecureRandom.uuid
    app.models.tasklists.create(id:, name:).to_json
  }

  patch("/tasklists/{id}") {
    use {
      body {
        name String
      }
    }

    app.models.tasklists.update(match: {id:}, update: {name:})
  }

  delete("/tasklists/{id}") {
    app.models.tasklists.delete(id:)
  }

  get("/tasklists/{id}") {
    app.models.tasklists.find(id:).to_json
  }

  get("/tasklists/{tasklist_id}/tasks") {
    app.models.tasks.where(tasklist_id:).to_json
  }

  post("/tasklists/{tasklist_id}/tasks") {
    use {
      body {
        title String
        date_due Object
      }
    }

    id = SecureRandom.uuid
    app.models.tasks.create(id:, tasklist_id:, title:, date_due:).to_json
  }

  get("/tasklists/{tasklist_id}/tasks/{id}") {
    app.models.tasks.find(tasklist_id:, id:).to_json
  }

  patch("/tasklists/{tasklist_id}/tasks/{id}") {
    use {
      body {
        title Object
        date_due Object
        closed_at Object
      }
    }

    update = {title:, date_due:, closed_at:}.filter { |k, v| !v.nil? }.to_h
    app.models.tasks.update(match: {tasklist_id:, id:}, update:).to_json
  }
}
